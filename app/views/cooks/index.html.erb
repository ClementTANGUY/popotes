<div class="row">

  <div class="col-sm-6">
    <div id="map-container">
      <div id="map"></div>
    </div>
  </div>

  <% if @places.empty? %>

    <div class="container padded">
      <div class="row">
        <div class="col-sm-6 text-center">
          <h4>Pour le moment, aucun chef ne propose encore de popotes par ici...<br>
            Tentez votre chance ailleurs :
          </h4>

          <%= form_tag cooks_path, method: :get, class:"row" do %>
           <div class="col-xs-6 col-xs-offset-2">
             <%= text_field_tag :location, params[:location], id:"user_input_autocomplete_address", class: "form-control", placeholder: "Entrez une adresse"%>
           </div>
           <div class="col-sm-2">
             <%= submit_tag "Trouvez !", class: "btn btn-popote" %>
           </div>
          <% end %>

          <% if !user_signed_in? || current_user.cook.nil? %>
            <h4>Ou soyez le premier Ã  proposer vos talents</h4>
            <%= link_to "Devenir Chef", new_user_registration_path, class:"navbar-wagon-item navbar-wagon-button btn" %>
          <% end %>
        </div>
      </div>
    </div>

  <% else  %>

    <div class="col-sm-6" style="overflow-y: auto; height: 500px;">
      <% @cooks.each do |cook| %>
          <%= render "cooks_cards", cook: cook %>
      <% end %>
    </div>

  <% end %>

</div>

<% content_for(:after_js) do %>

  <script type="text/javascript" async defer>
    var handler = Gmaps.build('Google', { markers: { maxRandomDistance: 5 } });
    handler.buildMap({
        provider: {
              // pass in other Google Maps API options here

              // The latitude and longitude to center the map (always required)
              center: new google.maps.LatLng(48.8529680, 2.3499030),
              // How you would like to style the map.
              // This is where you would paste any style found on Snazzy Maps.
              styles: [{"featureType":"administrative.country","elementType":"geometry.stroke","stylers":[{"visibility":"on"},{"color":"#5898F1"}]},{"featureType":"administrative.country","elementType":"labels.text.fill","stylers":[{"color":"#5898F1"}]},{"featureType":"administrative.province","elementType":"labels.text.fill","stylers":[{"color":"#6d6d6d"},{"visibility":"on"}]},{"featureType":"administrative.locality","elementType":"labels.text.fill","stylers":[{"color":"#555555"}]},{"featureType":"administrative.neighborhood","elementType":"labels.text.fill","stylers":[{"color":"#999999"}]},{"featureType":"landscape","elementType":"all","stylers":[{"color":"#f2f2f2"}]},{"featureType":"landscape.natural","elementType":"geometry.fill","stylers":[{"visibility":"on"}]},{"featureType":"landscape.natural.landcover","elementType":"geometry.fill","stylers":[{"visibility":"on"}]},{"featureType":"poi.attraction","elementType":"all","stylers":[{"visibility":"on"}]},{"featureType":"poi.business","elementType":"all","stylers":[{"visibility":"on"}]},{"featureType":"poi.government","elementType":"all","stylers":[{"visibility":"on"}]},{"featureType":"poi.medical","elementType":"all","stylers":[{"visibility":"on"}]},{"featureType":"poi.park","elementType":"geometry.fill","stylers":[{"color":"#e1eddd"}]},{"featureType":"poi.place_of_worship","elementType":"all","stylers":[{"visibility":"on"}]},{"featureType":"poi.school","elementType":"all","stylers":[{"visibility":"on"}]},{"featureType":"poi.sports_complex","elementType":"all","stylers":[{"visibility":"on"}]},{"featureType":"road","elementType":"all","stylers":[{"saturation":"-100"},{"lightness":"45"}]},{"featureType":"road.highway","elementType":"all","stylers":[{"visibility":"simplified"}]},{"featureType":"road.highway","elementType":"geometry.fill","stylers":[{"color":"#FF642E"}]},{"featureType":"road.highway","elementType":"labels.icon","stylers":[{"visibility":"on"},{"hue":"#009aff"},{"saturation":"100"},{"lightness":"5"}]},{"featureType":"road.highway.controlled_access","elementType":"all","stylers":[{"visibility":"on"}]},{"featureType":"road.highway.controlled_access","elementType":"geometry.fill","stylers":[{"color":"#ff9500"}]},{"featureType":"road.highway.controlled_access","elementType":"geometry.stroke","stylers":[{"visibility":"off"}]},{"featureType":"road.highway.controlled_access","elementType":"labels.icon","stylers":[{"lightness":"1"},{"saturation":"100"},{"hue":"#009aff"}]},{"featureType":"road.arterial","elementType":"geometry.fill","stylers":[{"color":"#ffffff"}]},{"featureType":"road.arterial","elementType":"labels.text.fill","stylers":[{"color":"#8a8a8a"}]},{"featureType":"road.arterial","elementType":"labels.icon","stylers":[{"visibility":"off"}]},{"featureType":"road.local","elementType":"geometry.fill","stylers":[{"color":"#ffffff"}]},{"featureType":"transit","elementType":"all","stylers":[{"visibility":"off"}]},{"featureType":"transit.station.airport","elementType":"all","stylers":[{"visibility":"on"}]},{"featureType":"transit.station.airport","elementType":"geometry.fill","stylers":[{"lightness":"33"},{"saturation":"-100"},{"visibility":"on"}]},{"featureType":"transit.station.bus","elementType":"all","stylers":[{"visibility":"on"}]},{"featureType":"transit.station.rail","elementType":"all","stylers":[{"visibility":"on"}]},{"featureType":"water","elementType":"all","stylers":[{"color":"#46bcec"},{"visibility":"on"}]},{"featureType":"water","elementType":"geometry.fill","stylers":[{"color":"#5898F1"}]},{"featureType":"water","elementType":"labels.text.fill","stylers":[{"color":"#ffffff"}]},{"featureType":"water","elementType":"labels.text.stroke","stylers":[{"visibility":"off"}]}]
            },
        internal: { id: 'map' }
      },
      function(){
      markers = handler.addMarkers(<%= raw @hash.to_json %>);
      handler.bounds.extendWith(markers);
      handler.fitMapToBounds();
      if (markers.length == 0) {
        handler.getMap().setZoom(2);
      } else if (markers.length == 1) {
        handler.getMap().setZoom(14);
      }
    });
  </script>

  <!-- Custom JS code to bind to Autocomplete API -->
 <script type="text/javascript">
   function initializeAutocomplete(id) {
     var element = document.getElementById(id);
     var options = { types: ['geocode'],
          componentRestrictions: {country: 'fr'}
      };
     if (element) {
       var autocomplete = new google.maps.places.Autocomplete(element, options);
       google.maps.event.addListener(autocomplete, 'place_changed', onPlaceChanged);
     }
   }
   function onPlaceChanged() {
     var place = this.getPlace();
     // console.log(place);  // Uncomment this line to view the full object returned by Google API.
     for (var i in place.address_components) {
       var component = place.address_components[i];
       for (var j in component.types) {  // Some types are ["country", "political"]
         var type_element = document.getElementById(component.types[j]);
         if (type_element) {
           type_element.value = component.long_name;
         }
       }
     }
   }
   google.maps.event.addDomListener(window, 'load', function() {
      initializeAutocomplete('user_input_autocomplete_address');
   });
 </script>

<% end %>




